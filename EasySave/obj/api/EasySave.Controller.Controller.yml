### YamlMime:ManagedReference
items:
- uid: EasySave.Controller.Controller
  commentId: T:EasySave.Controller.Controller
  id: Controller
  parent: EasySave.Controller
  children:
  - EasySave.Controller.Controller.#ctor(EasySave.Model.IModel,EasySave.View.IView)
  - EasySave.Controller.Controller.Start
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: Controller
  fullName: EasySave.Controller.Controller
  type: Class
  source:
    remote:
      path: EasySave/Controller/Controller.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Controller
    path: Controller/Controller.cs
    startLine: 11
  assemblies:
  - EasySave
  namespace: EasySave.Controller
  summary: "\nManage input from view and execute commands from the model.\n"
  example: []
  syntax:
    content: public class Controller
    content.vb: Public Class Controller
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasySave.Controller.Controller.#ctor(EasySave.Model.IModel,EasySave.View.IView)
  commentId: M:EasySave.Controller.Controller.#ctor(EasySave.Model.IModel,EasySave.View.IView)
  id: '#ctor(EasySave.Model.IModel,EasySave.View.IView)'
  parent: EasySave.Controller.Controller
  langs:
  - csharp
  - vb
  name: Controller(IModel, IView)
  nameWithType: Controller.Controller(IModel, IView)
  fullName: EasySave.Controller.Controller.Controller(EasySave.Model.IModel, EasySave.View.IView)
  type: Constructor
  source:
    remote:
      path: EasySave/Controller/Controller.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: .ctor
    path: Controller/Controller.cs
    startLine: 21
  assemblies:
  - EasySave
  namespace: EasySave.Controller
  syntax:
    content: public Controller(IModel model, IView view)
    parameters:
    - id: model
      type: EasySave.Model.IModel
    - id: view
      type: EasySave.View.IView
    content.vb: Public Sub New(model As IModel, view As IView)
  overload: EasySave.Controller.Controller.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Controller.Controller.Start
  commentId: M:EasySave.Controller.Controller.Start
  id: Start
  parent: EasySave.Controller.Controller
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Controller.Start()
  fullName: EasySave.Controller.Controller.Start()
  type: Method
  source:
    remote:
      path: EasySave/Controller/Controller.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Start
    path: Controller/Controller.cs
    startLine: 104
  assemblies:
  - EasySave
  namespace: EasySave.Controller
  summary: "\nStart the main programm.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: EasySave.Controller.Controller.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EasySave.Controller
  commentId: N:EasySave.Controller
  name: EasySave.Controller
  nameWithType: EasySave.Controller
  fullName: EasySave.Controller
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Controller.Controller.#ctor*
  commentId: Overload:EasySave.Controller.Controller.#ctor
  name: Controller
  nameWithType: Controller.Controller
  fullName: EasySave.Controller.Controller.Controller
- uid: EasySave.Model.IModel
  commentId: T:EasySave.Model.IModel
  parent: EasySave.Model
  name: IModel
  nameWithType: IModel
  fullName: EasySave.Model.IModel
- uid: EasySave.View.IView
  commentId: T:EasySave.View.IView
  parent: EasySave.View
  name: IView
  nameWithType: IView
  fullName: EasySave.View.IView
- uid: EasySave.Model
  commentId: N:EasySave.Model
  name: EasySave.Model
  nameWithType: EasySave.Model
  fullName: EasySave.Model
- uid: EasySave.View
  commentId: N:EasySave.View
  name: EasySave.View
  nameWithType: EasySave.View
  fullName: EasySave.View
- uid: EasySave.Controller.Controller.Start*
  commentId: Overload:EasySave.Controller.Controller.Start
  name: Start
  nameWithType: Controller.Start
  fullName: EasySave.Controller.Controller.Start
