### YamlMime:ManagedReference
items:
- uid: EasySave.Helpers.Files.JsonHelper
  commentId: T:EasySave.Helpers.Files.JsonHelper
  id: JsonHelper
  parent: EasySave.Helpers.Files
  children:
  - EasySave.Helpers.Files.JsonHelper.ReadJson``1(System.String)
  - EasySave.Helpers.Files.JsonHelper.WriteJson(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: EasySave.Helpers.Files.JsonHelper
  type: Class
  source:
    remote:
      path: EasySave/Helpers/Files/JsonHelper.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: JsonHelper
    path: Helpers/Files/JsonHelper.cs
    startLine: 9
  assemblies:
  - EasySave
  namespace: EasySave.Helpers.Files
  summary: "\nManage Json file interactions.\n"
  example: []
  syntax:
    content: public static class JsonHelper
    content.vb: Public Module JsonHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EasySave.Helpers.Files.JsonHelper.WriteJson(System.Object,System.String)
  commentId: M:EasySave.Helpers.Files.JsonHelper.WriteJson(System.Object,System.String)
  id: WriteJson(System.Object,System.String)
  parent: EasySave.Helpers.Files.JsonHelper
  langs:
  - csharp
  - vb
  name: WriteJson(Object, String)
  nameWithType: JsonHelper.WriteJson(Object, String)
  fullName: EasySave.Helpers.Files.JsonHelper.WriteJson(System.Object, System.String)
  type: Method
  source:
    remote:
      path: EasySave/Helpers/Files/JsonHelper.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: WriteJson
    path: Helpers/Files/JsonHelper.cs
    startLine: 16
  assemblies:
  - EasySave
  namespace: EasySave.Helpers.Files
  summary: "\nWrite a Json file.\n"
  example: []
  syntax:
    content: public static void WriteJson(object data, string path)
    parameters:
    - id: data
      type: System.Object
      description: Data to write
    - id: path
      type: System.String
      description: Target path to write file
    content.vb: Public Shared Sub WriteJson(data As Object, path As String)
  overload: EasySave.Helpers.Files.JsonHelper.WriteJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EasySave.Helpers.Files.JsonHelper.ReadJson``1(System.String)
  commentId: M:EasySave.Helpers.Files.JsonHelper.ReadJson``1(System.String)
  id: ReadJson``1(System.String)
  parent: EasySave.Helpers.Files.JsonHelper
  langs:
  - csharp
  - vb
  name: ReadJson<Data>(String)
  nameWithType: JsonHelper.ReadJson<Data>(String)
  fullName: EasySave.Helpers.Files.JsonHelper.ReadJson<Data>(System.String)
  type: Method
  source:
    remote:
      path: EasySave/Helpers/Files/JsonHelper.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: ReadJson
    path: Helpers/Files/JsonHelper.cs
    startLine: 31
  assemblies:
  - EasySave
  namespace: EasySave.Helpers.Files
  summary: "\nRead a json format file and parse it.\n"
  example: []
  syntax:
    content: public static Data ReadJson<Data>(string path)
    parameters:
    - id: path
      type: System.String
      description: Path to the file to read
    typeParameters:
    - id: Data
      description: Generic type
    return:
      type: '{Data}'
      description: The file parsed to the Data generic.
    content.vb: Public Shared Function ReadJson(Of Data)(path As String) As Data
  overload: EasySave.Helpers.Files.JsonHelper.ReadJson*
  nameWithType.vb: JsonHelper.ReadJson(Of Data)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EasySave.Helpers.Files.JsonHelper.ReadJson(Of Data)(System.String)
  name.vb: ReadJson(Of Data)(String)
references:
- uid: EasySave.Helpers.Files
  commentId: N:EasySave.Helpers.Files
  name: EasySave.Helpers.Files
  nameWithType: EasySave.Helpers.Files
  fullName: EasySave.Helpers.Files
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Helpers.Files.JsonHelper.WriteJson*
  commentId: Overload:EasySave.Helpers.Files.JsonHelper.WriteJson
  name: WriteJson
  nameWithType: JsonHelper.WriteJson
  fullName: EasySave.Helpers.Files.JsonHelper.WriteJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasySave.Helpers.Files.JsonHelper.ReadJson*
  commentId: Overload:EasySave.Helpers.Files.JsonHelper.ReadJson
  name: ReadJson
  nameWithType: JsonHelper.ReadJson
  fullName: EasySave.Helpers.Files.JsonHelper.ReadJson
- uid: '{Data}'
  commentId: '!:Data'
  definition: Data
  name: Data
  nameWithType: Data
  fullName: Data
- uid: Data
  commentId: '!:Data'
  name: Data
  nameWithType: Data
  fullName: Data
