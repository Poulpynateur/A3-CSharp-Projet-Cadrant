### YamlMime:ManagedReference
items:
- uid: EasySave.Model.Output.Config
  commentId: T:EasySave.Model.Output.Config
  id: Config
  parent: EasySave.Model.Output
  children:
  - EasySave.Model.Output.Config.#ctor
  - EasySave.Model.Output.Config.LoadCryptFormat
  - EasySave.Model.Output.Config.LoadDiffSaveConfig(System.String)
  - EasySave.Model.Output.Config.LoadErpBlackList
  - EasySave.Model.Output.Config.LoadTasks
  - EasySave.Model.Output.Config.SaveCryptFormat(System.Collections.Generic.List{System.String})
  - EasySave.Model.Output.Config.SaveDiffSaveConfig(System.Collections.Generic.Dictionary{System.String,System.String},System.String)
  - EasySave.Model.Output.Config.SaveErpBlackList(System.Collections.Generic.List{System.String})
  - EasySave.Model.Output.Config.SaveTasks(System.Collections.Generic.List{EasySave.Model.Task.Task})
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Config
  fullName: EasySave.Model.Output.Config
  type: Class
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Config
    path: Model/Output/Config.cs
    startLine: 11
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nLoad the configuration.\n"
  example: []
  syntax:
    content: public class Config
    content.vb: Public Class Config
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasySave.Model.Output.Config.#ctor
  commentId: M:EasySave.Model.Output.Config.#ctor
  id: '#ctor'
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: Config()
  nameWithType: Config.Config()
  fullName: EasySave.Model.Output.Config.Config()
  type: Constructor
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: .ctor
    path: Model/Output/Config.cs
    startLine: 16
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  syntax:
    content: public Config()
    content.vb: Public Sub New
  overload: EasySave.Model.Output.Config.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Config.LoadErpBlackList
  commentId: M:EasySave.Model.Output.Config.LoadErpBlackList
  id: LoadErpBlackList
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: LoadErpBlackList()
  nameWithType: Config.LoadErpBlackList()
  fullName: EasySave.Model.Output.Config.LoadErpBlackList()
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: LoadErpBlackList
    path: Model/Output/Config.cs
    startLine: 26
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nLoad ERP blacklist.\n"
  example: []
  syntax:
    content: public List<string> LoadErpBlackList()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function LoadErpBlackList As List(Of String)
  overload: EasySave.Model.Output.Config.LoadErpBlackList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Config.SaveErpBlackList(System.Collections.Generic.List{System.String})
  commentId: M:EasySave.Model.Output.Config.SaveErpBlackList(System.Collections.Generic.List{System.String})
  id: SaveErpBlackList(System.Collections.Generic.List{System.String})
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: SaveErpBlackList(List<String>)
  nameWithType: Config.SaveErpBlackList(List<String>)
  fullName: EasySave.Model.Output.Config.SaveErpBlackList(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: SaveErpBlackList
    path: Model/Output/Config.cs
    startLine: 35
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nSave ERP blacklist.\n"
  example: []
  syntax:
    content: public void SaveErpBlackList(List<string> erp)
    parameters:
    - id: erp
      type: System.Collections.Generic.List{System.String}
      description: Entered list by the user
    content.vb: Public Sub SaveErpBlackList(erp As List(Of String))
  overload: EasySave.Model.Output.Config.SaveErpBlackList*
  nameWithType.vb: Config.SaveErpBlackList(List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EasySave.Model.Output.Config.SaveErpBlackList(System.Collections.Generic.List(Of System.String))
  name.vb: SaveErpBlackList(List(Of String))
- uid: EasySave.Model.Output.Config.LoadCryptFormat
  commentId: M:EasySave.Model.Output.Config.LoadCryptFormat
  id: LoadCryptFormat
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: LoadCryptFormat()
  nameWithType: Config.LoadCryptFormat()
  fullName: EasySave.Model.Output.Config.LoadCryptFormat()
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: LoadCryptFormat
    path: Model/Output/Config.cs
    startLine: 43
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nLoad the crypt format of the tasks.\n"
  example: []
  syntax:
    content: public List<string> LoadCryptFormat()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function LoadCryptFormat As List(Of String)
  overload: EasySave.Model.Output.Config.LoadCryptFormat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Config.SaveCryptFormat(System.Collections.Generic.List{System.String})
  commentId: M:EasySave.Model.Output.Config.SaveCryptFormat(System.Collections.Generic.List{System.String})
  id: SaveCryptFormat(System.Collections.Generic.List{System.String})
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: SaveCryptFormat(List<String>)
  nameWithType: Config.SaveCryptFormat(List<String>)
  fullName: EasySave.Model.Output.Config.SaveCryptFormat(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: SaveCryptFormat
    path: Model/Output/Config.cs
    startLine: 52
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nSave the crypt format of the task\n"
  example: []
  syntax:
    content: public void SaveCryptFormat(List<string> format)
    parameters:
    - id: format
      type: System.Collections.Generic.List{System.String}
      description: Entered crypt format by the user
    content.vb: Public Sub SaveCryptFormat(format As List(Of String))
  overload: EasySave.Model.Output.Config.SaveCryptFormat*
  nameWithType.vb: Config.SaveCryptFormat(List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EasySave.Model.Output.Config.SaveCryptFormat(System.Collections.Generic.List(Of System.String))
  name.vb: SaveCryptFormat(List(Of String))
- uid: EasySave.Model.Output.Config.LoadDiffSaveConfig(System.String)
  commentId: M:EasySave.Model.Output.Config.LoadDiffSaveConfig(System.String)
  id: LoadDiffSaveConfig(System.String)
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: LoadDiffSaveConfig(String)
  nameWithType: Config.LoadDiffSaveConfig(String)
  fullName: EasySave.Model.Output.Config.LoadDiffSaveConfig(System.String)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: LoadDiffSaveConfig
    path: Model/Output/Config.cs
    startLine: 61
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nLoad the config of the differential save.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> LoadDiffSaveConfig(string path)
    parameters:
    - id: path
      type: System.String
      description: Entered path by the user
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Function LoadDiffSaveConfig(path As String) As Dictionary(Of String, String)
  overload: EasySave.Model.Output.Config.LoadDiffSaveConfig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Config.SaveDiffSaveConfig(System.Collections.Generic.Dictionary{System.String,System.String},System.String)
  commentId: M:EasySave.Model.Output.Config.SaveDiffSaveConfig(System.Collections.Generic.Dictionary{System.String,System.String},System.String)
  id: SaveDiffSaveConfig(System.Collections.Generic.Dictionary{System.String,System.String},System.String)
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: SaveDiffSaveConfig(Dictionary<String, String>, String)
  nameWithType: Config.SaveDiffSaveConfig(Dictionary<String, String>, String)
  fullName: EasySave.Model.Output.Config.SaveDiffSaveConfig(System.Collections.Generic.Dictionary<System.String, System.String>, System.String)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: SaveDiffSaveConfig
    path: Model/Output/Config.cs
    startLine: 71
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nSave the config of the differential save.\n"
  example: []
  syntax:
    content: public void SaveDiffSaveConfig(Dictionary<string, string> diffConfign, string path)
    parameters:
    - id: diffConfign
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Entered the differencial save config by the user
    - id: path
      type: System.String
      description: Entered path by the user
    content.vb: Public Sub SaveDiffSaveConfig(diffConfign As Dictionary(Of String, String), path As String)
  overload: EasySave.Model.Output.Config.SaveDiffSaveConfig*
  nameWithType.vb: Config.SaveDiffSaveConfig(Dictionary(Of String, String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EasySave.Model.Output.Config.SaveDiffSaveConfig(System.Collections.Generic.Dictionary(Of System.String, System.String), System.String)
  name.vb: SaveDiffSaveConfig(Dictionary(Of String, String), String)
- uid: EasySave.Model.Output.Config.LoadTasks
  commentId: M:EasySave.Model.Output.Config.LoadTasks
  id: LoadTasks
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: LoadTasks()
  nameWithType: Config.LoadTasks()
  fullName: EasySave.Model.Output.Config.LoadTasks()
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: LoadTasks
    path: Model/Output/Config.cs
    startLine: 81
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nLoad all the tasks.\n"
  example: []
  syntax:
    content: public List<Task> LoadTasks()
    return:
      type: System.Collections.Generic.List{EasySave.Model.Task.Task}
    content.vb: Public Function LoadTasks As List(Of Task)
  overload: EasySave.Model.Output.Config.LoadTasks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Config.SaveTasks(System.Collections.Generic.List{EasySave.Model.Task.Task})
  commentId: M:EasySave.Model.Output.Config.SaveTasks(System.Collections.Generic.List{EasySave.Model.Task.Task})
  id: SaveTasks(System.Collections.Generic.List{EasySave.Model.Task.Task})
  parent: EasySave.Model.Output.Config
  langs:
  - csharp
  - vb
  name: SaveTasks(List<Task>)
  nameWithType: Config.SaveTasks(List<Task>)
  fullName: EasySave.Model.Output.Config.SaveTasks(System.Collections.Generic.List<EasySave.Model.Task.Task>)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Config.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: SaveTasks
    path: Model/Output/Config.cs
    startLine: 90
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nSave a renseigned task.\n"
  example: []
  syntax:
    content: public void SaveTasks(List<Task> tasks)
    parameters:
    - id: tasks
      type: System.Collections.Generic.List{EasySave.Model.Task.Task}
      description: Save the new tasks in the json file
    content.vb: Public Sub SaveTasks(tasks As List(Of Task))
  overload: EasySave.Model.Output.Config.SaveTasks*
  nameWithType.vb: Config.SaveTasks(List(Of Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EasySave.Model.Output.Config.SaveTasks(System.Collections.Generic.List(Of EasySave.Model.Task.Task))
  name.vb: SaveTasks(List(Of Task))
references:
- uid: EasySave.Model.Output
  commentId: N:EasySave.Model.Output
  name: EasySave.Model.Output
  nameWithType: EasySave.Model.Output
  fullName: EasySave.Model.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Model.Output.Config.#ctor*
  commentId: Overload:EasySave.Model.Output.Config.#ctor
  name: Config
  nameWithType: Config.Config
  fullName: EasySave.Model.Output.Config.Config
- uid: EasySave.Model.Output.Config.LoadErpBlackList*
  commentId: Overload:EasySave.Model.Output.Config.LoadErpBlackList
  name: LoadErpBlackList
  nameWithType: Config.LoadErpBlackList
  fullName: EasySave.Model.Output.Config.LoadErpBlackList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EasySave.Model.Output.Config.SaveErpBlackList*
  commentId: Overload:EasySave.Model.Output.Config.SaveErpBlackList
  name: SaveErpBlackList
  nameWithType: Config.SaveErpBlackList
  fullName: EasySave.Model.Output.Config.SaveErpBlackList
- uid: EasySave.Model.Output.Config.LoadCryptFormat*
  commentId: Overload:EasySave.Model.Output.Config.LoadCryptFormat
  name: LoadCryptFormat
  nameWithType: Config.LoadCryptFormat
  fullName: EasySave.Model.Output.Config.LoadCryptFormat
- uid: EasySave.Model.Output.Config.SaveCryptFormat*
  commentId: Overload:EasySave.Model.Output.Config.SaveCryptFormat
  name: SaveCryptFormat
  nameWithType: Config.SaveCryptFormat
  fullName: EasySave.Model.Output.Config.SaveCryptFormat
- uid: EasySave.Model.Output.Config.LoadDiffSaveConfig*
  commentId: Overload:EasySave.Model.Output.Config.LoadDiffSaveConfig
  name: LoadDiffSaveConfig
  nameWithType: Config.LoadDiffSaveConfig
  fullName: EasySave.Model.Output.Config.LoadDiffSaveConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EasySave.Model.Output.Config.SaveDiffSaveConfig*
  commentId: Overload:EasySave.Model.Output.Config.SaveDiffSaveConfig
  name: SaveDiffSaveConfig
  nameWithType: Config.SaveDiffSaveConfig
  fullName: EasySave.Model.Output.Config.SaveDiffSaveConfig
- uid: EasySave.Model.Output.Config.LoadTasks*
  commentId: Overload:EasySave.Model.Output.Config.LoadTasks
  name: LoadTasks
  nameWithType: Config.LoadTasks
  fullName: EasySave.Model.Output.Config.LoadTasks
- uid: System.Collections.Generic.List{EasySave.Model.Task.Task}
  commentId: T:System.Collections.Generic.List{EasySave.Model.Task.Task}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Task>
  nameWithType: List<Task>
  fullName: System.Collections.Generic.List<EasySave.Model.Task.Task>
  nameWithType.vb: List(Of Task)
  fullName.vb: System.Collections.Generic.List(Of EasySave.Model.Task.Task)
  name.vb: List(Of Task)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EasySave.Model.Task.Task
    name: Task
    nameWithType: Task
    fullName: EasySave.Model.Task.Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EasySave.Model.Task.Task
    name: Task
    nameWithType: Task
    fullName: EasySave.Model.Task.Task
  - name: )
    nameWithType: )
    fullName: )
- uid: EasySave.Model.Output.Config.SaveTasks*
  commentId: Overload:EasySave.Model.Output.Config.SaveTasks
  name: SaveTasks
  nameWithType: Config.SaveTasks
  fullName: EasySave.Model.Output.Config.SaveTasks
