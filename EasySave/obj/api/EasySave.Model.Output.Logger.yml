### YamlMime:ManagedReference
items:
- uid: EasySave.Model.Output.Logger
  commentId: T:EasySave.Model.Output.Logger
  id: Logger
  parent: EasySave.Model.Output
  children:
  - EasySave.Model.Output.Logger.#ctor
  - EasySave.Model.Output.Logger.WriteLog(EasySave.Model.Log)
  - EasySave.Model.Output.Logger.WriteProgress(EasySave.Model.Progress)
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: EasySave.Model.Output.Logger
  type: Class
  source:
    remote:
      path: EasySave/Model/Output/Logger.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Logger
    path: Model/Output/Logger.cs
    startLine: 12
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nClass used to write logs\n"
  example: []
  syntax:
    content: public class Logger
    content.vb: Public Class Logger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasySave.Model.Output.Logger.#ctor
  commentId: M:EasySave.Model.Output.Logger.#ctor
  id: '#ctor'
  parent: EasySave.Model.Output.Logger
  langs:
  - csharp
  - vb
  name: Logger()
  nameWithType: Logger.Logger()
  fullName: EasySave.Model.Output.Logger.Logger()
  type: Constructor
  source:
    remote:
      path: EasySave/Model/Output/Logger.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: .ctor
    path: Model/Output/Logger.cs
    startLine: 22
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nConstructor of the Logger\n"
  example: []
  syntax:
    content: public Logger()
    content.vb: Public Sub New
  overload: EasySave.Model.Output.Logger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Logger.WriteLog(EasySave.Model.Log)
  commentId: M:EasySave.Model.Output.Logger.WriteLog(EasySave.Model.Log)
  id: WriteLog(EasySave.Model.Log)
  parent: EasySave.Model.Output.Logger
  langs:
  - csharp
  - vb
  name: WriteLog(Log)
  nameWithType: Logger.WriteLog(Log)
  fullName: EasySave.Model.Output.Logger.WriteLog(EasySave.Model.Log)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Logger.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: WriteLog
    path: Model/Output/Logger.cs
    startLine: 38
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nWrite a Json file for the log\n"
  example: []
  syntax:
    content: public void WriteLog(Log log)
    parameters:
    - id: log
      type: EasySave.Model.Log
      description: ''
    content.vb: Public Sub WriteLog(log As Log)
  overload: EasySave.Model.Output.Logger.WriteLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EasySave.Model.Output.Logger.WriteProgress(EasySave.Model.Progress)
  commentId: M:EasySave.Model.Output.Logger.WriteProgress(EasySave.Model.Progress)
  id: WriteProgress(EasySave.Model.Progress)
  parent: EasySave.Model.Output.Logger
  langs:
  - csharp
  - vb
  name: WriteProgress(Progress)
  nameWithType: Logger.WriteProgress(Progress)
  fullName: EasySave.Model.Output.Logger.WriteProgress(EasySave.Model.Progress)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/Logger.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: WriteProgress
    path: Model/Output/Logger.cs
    startLine: 47
  assemblies:
  - EasySave
  namespace: EasySave.Model.Output
  summary: "\nWrite a Json File for the progress\n"
  example: []
  syntax:
    content: public void WriteProgress(Progress progress)
    parameters:
    - id: progress
      type: EasySave.Model.Progress
      description: ''
    content.vb: Public Sub WriteProgress(progress As Progress)
  overload: EasySave.Model.Output.Logger.WriteProgress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EasySave.Model.Output
  commentId: N:EasySave.Model.Output
  name: EasySave.Model.Output
  nameWithType: EasySave.Model.Output
  fullName: EasySave.Model.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Model.Output.Logger.#ctor*
  commentId: Overload:EasySave.Model.Output.Logger.#ctor
  name: Logger
  nameWithType: Logger.Logger
  fullName: EasySave.Model.Output.Logger.Logger
- uid: EasySave.Model.Output.Logger.WriteLog*
  commentId: Overload:EasySave.Model.Output.Logger.WriteLog
  name: WriteLog
  nameWithType: Logger.WriteLog
  fullName: EasySave.Model.Output.Logger.WriteLog
- uid: EasySave.Model.Log
  commentId: T:EasySave.Model.Log
  parent: EasySave.Model
  name: Log
  nameWithType: Log
  fullName: EasySave.Model.Log
- uid: EasySave.Model
  commentId: N:EasySave.Model
  name: EasySave.Model
  nameWithType: EasySave.Model
  fullName: EasySave.Model
- uid: EasySave.Model.Output.Logger.WriteProgress*
  commentId: Overload:EasySave.Model.Output.Logger.WriteProgress
  name: WriteProgress
  nameWithType: Logger.WriteProgress
  fullName: EasySave.Model.Output.Logger.WriteProgress
- uid: EasySave.Model.Progress
  commentId: T:EasySave.Model.Progress
  parent: EasySave.Model
  name: Progress
  nameWithType: Progress
  fullName: EasySave.Model.Progress
