### YamlMime:ManagedReference
items:
- uid: EasySave.Model.Job.Option
  commentId: T:EasySave.Model.Job.Option
  id: Option
  parent: EasySave.Model.Job
  children:
  - EasySave.Model.Job.Option.#ctor(System.String,System.String,System.String)
  - EasySave.Model.Job.Option.Description
  - EasySave.Model.Job.Option.Name
  - EasySave.Model.Job.Option.ValidationRegex
  langs:
  - csharp
  - vb
  name: Option
  nameWithType: Option
  fullName: EasySave.Model.Job.Option
  type: Class
  source:
    remote:
      path: EasySave/Model/Job/Option.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Option
    path: Model/Job/Option.cs
    startLine: 10
  assemblies:
  - EasySave
  namespace: EasySave.Model.Job
  summary: "\nAll the informations about a qui-save or a task.\n"
  example: []
  syntax:
    content: public class Option
    content.vb: Public Class Option
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasySave.Model.Job.Option.Name
  commentId: P:EasySave.Model.Job.Option.Name
  id: Name
  parent: EasySave.Model.Job.Option
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Option.Name
  fullName: EasySave.Model.Job.Option.Name
  type: Property
  source:
    remote:
      path: EasySave/Model/Job/Option.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Name
    path: Model/Job/Option.cs
    startLine: 12
  assemblies:
  - EasySave
  namespace: EasySave.Model.Job
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EasySave.Model.Job.Option.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EasySave.Model.Job.Option.Description
  commentId: P:EasySave.Model.Job.Option.Description
  id: Description
  parent: EasySave.Model.Job.Option
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Option.Description
  fullName: EasySave.Model.Job.Option.Description
  type: Property
  source:
    remote:
      path: EasySave/Model/Job/Option.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Description
    path: Model/Job/Option.cs
    startLine: 13
  assemblies:
  - EasySave
  namespace: EasySave.Model.Job
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: EasySave.Model.Job.Option.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EasySave.Model.Job.Option.ValidationRegex
  commentId: P:EasySave.Model.Job.Option.ValidationRegex
  id: ValidationRegex
  parent: EasySave.Model.Job.Option
  langs:
  - csharp
  - vb
  name: ValidationRegex
  nameWithType: Option.ValidationRegex
  fullName: EasySave.Model.Job.Option.ValidationRegex
  type: Property
  source:
    remote:
      path: EasySave/Model/Job/Option.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: ValidationRegex
    path: Model/Job/Option.cs
    startLine: 14
  assemblies:
  - EasySave
  namespace: EasySave.Model.Job
  syntax:
    content: public string ValidationRegex { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ValidationRegex As String
  overload: EasySave.Model.Job.Option.ValidationRegex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EasySave.Model.Job.Option.#ctor(System.String,System.String,System.String)
  commentId: M:EasySave.Model.Job.Option.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: EasySave.Model.Job.Option
  langs:
  - csharp
  - vb
  name: Option(String, String, String)
  nameWithType: Option.Option(String, String, String)
  fullName: EasySave.Model.Job.Option.Option(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: EasySave/Model/Job/Option.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: .ctor
    path: Model/Job/Option.cs
    startLine: 16
  assemblies:
  - EasySave
  namespace: EasySave.Model.Job
  syntax:
    content: public Option(string name, string description, string validationRegex)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: validationRegex
      type: System.String
    content.vb: Public Sub New(name As String, description As String, validationRegex As String)
  overload: EasySave.Model.Job.Option.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EasySave.Model.Job
  commentId: N:EasySave.Model.Job
  name: EasySave.Model.Job
  nameWithType: EasySave.Model.Job
  fullName: EasySave.Model.Job
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Model.Job.Option.Name*
  commentId: Overload:EasySave.Model.Job.Option.Name
  name: Name
  nameWithType: Option.Name
  fullName: EasySave.Model.Job.Option.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasySave.Model.Job.Option.Description*
  commentId: Overload:EasySave.Model.Job.Option.Description
  name: Description
  nameWithType: Option.Description
  fullName: EasySave.Model.Job.Option.Description
- uid: EasySave.Model.Job.Option.ValidationRegex*
  commentId: Overload:EasySave.Model.Job.Option.ValidationRegex
  name: ValidationRegex
  nameWithType: Option.ValidationRegex
  fullName: EasySave.Model.Job.Option.ValidationRegex
- uid: EasySave.Model.Job.Option.#ctor*
  commentId: Overload:EasySave.Model.Job.Option.#ctor
  name: Option
  nameWithType: Option.Option
  fullName: EasySave.Model.Job.Option.Option
