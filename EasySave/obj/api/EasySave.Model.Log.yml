### YamlMime:ManagedReference
items:
- uid: EasySave.Model.Log
  commentId: T:EasySave.Model.Log
  id: Log
  parent: EasySave.Model
  children:
  - EasySave.Model.Log.Date
  - EasySave.Model.Log.FeedLog(System.String,System.String,System.String,System.Int64,System.TimeSpan)
  - EasySave.Model.Log.FilesSize
  - EasySave.Model.Log.Source
  - EasySave.Model.Log.Target
  - EasySave.Model.Log.TaskName
  - EasySave.Model.Log.TransfertTime
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: Log
  fullName: EasySave.Model.Log
  type: Class
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Log
    path: Model/Output/DataFormat/Log.cs
    startLine: 9
  assemblies:
  - EasySave
  namespace: EasySave.Model
  summary: "\nFormat of the log to read from Json.\n"
  example: []
  syntax:
    content: public class Log
    content.vb: Public Class Log
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EasySave.Model.Log.Date
  commentId: P:EasySave.Model.Log.Date
  id: Date
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: Log.Date
  fullName: EasySave.Model.Log.Date
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Date
    path: Model/Output/DataFormat/Log.cs
    startLine: 11
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public DateTime Date { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Date As Date
  overload: EasySave.Model.Log.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.TaskName
  commentId: P:EasySave.Model.Log.TaskName
  id: TaskName
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: TaskName
  nameWithType: Log.TaskName
  fullName: EasySave.Model.Log.TaskName
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: TaskName
    path: Model/Output/DataFormat/Log.cs
    startLine: 13
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public string TaskName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TaskName As String
  overload: EasySave.Model.Log.TaskName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.Source
  commentId: P:EasySave.Model.Log.Source
  id: Source
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Log.Source
  fullName: EasySave.Model.Log.Source
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Source
    path: Model/Output/DataFormat/Log.cs
    startLine: 14
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: EasySave.Model.Log.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.Target
  commentId: P:EasySave.Model.Log.Target
  id: Target
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: Log.Target
  fullName: EasySave.Model.Log.Target
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: Target
    path: Model/Output/DataFormat/Log.cs
    startLine: 15
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public string Target { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Target As String
  overload: EasySave.Model.Log.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.FilesSize
  commentId: P:EasySave.Model.Log.FilesSize
  id: FilesSize
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: FilesSize
  nameWithType: Log.FilesSize
  fullName: EasySave.Model.Log.FilesSize
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: FilesSize
    path: Model/Output/DataFormat/Log.cs
    startLine: 16
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public long FilesSize { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property FilesSize As Long
  overload: EasySave.Model.Log.FilesSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.TransfertTime
  commentId: P:EasySave.Model.Log.TransfertTime
  id: TransfertTime
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: TransfertTime
  nameWithType: Log.TransfertTime
  fullName: EasySave.Model.Log.TransfertTime
  type: Property
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: TransfertTime
    path: Model/Output/DataFormat/Log.cs
    startLine: 18
  assemblies:
  - EasySave
  namespace: EasySave.Model
  syntax:
    content: public TimeSpan TransfertTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property TransfertTime As TimeSpan
  overload: EasySave.Model.Log.TransfertTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EasySave.Model.Log.FeedLog(System.String,System.String,System.String,System.Int64,System.TimeSpan)
  commentId: M:EasySave.Model.Log.FeedLog(System.String,System.String,System.String,System.Int64,System.TimeSpan)
  id: FeedLog(System.String,System.String,System.String,System.Int64,System.TimeSpan)
  parent: EasySave.Model.Log
  langs:
  - csharp
  - vb
  name: FeedLog(String, String, String, Int64, TimeSpan)
  nameWithType: Log.FeedLog(String, String, String, Int64, TimeSpan)
  fullName: EasySave.Model.Log.FeedLog(System.String, System.String, System.String, System.Int64, System.TimeSpan)
  type: Method
  source:
    remote:
      path: EasySave/Model/Output/DataFormat/Log.cs
      branch: master
      repo: https://dev.azure.com/Groupe5/Projet%20Cadrant%202019/_git/Projet%20Cadrant%202019
    id: FeedLog
    path: Model/Output/DataFormat/Log.cs
    startLine: 23
  assemblies:
  - EasySave
  namespace: EasySave.Model
  summary: "\nJsonSerializer doesn&apos;t permit parameterized constructor.\n"
  example: []
  syntax:
    content: public void FeedLog(string taskName, string source, string target, long filesSize, TimeSpan transfertTime)
    parameters:
    - id: taskName
      type: System.String
    - id: source
      type: System.String
    - id: target
      type: System.String
    - id: filesSize
      type: System.Int64
    - id: transfertTime
      type: System.TimeSpan
    content.vb: Public Sub FeedLog(taskName As String, source As String, target As String, filesSize As Long, transfertTime As TimeSpan)
  overload: EasySave.Model.Log.FeedLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EasySave.Model
  commentId: N:EasySave.Model
  name: EasySave.Model
  nameWithType: EasySave.Model
  fullName: EasySave.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EasySave.Model.Log.Date*
  commentId: Overload:EasySave.Model.Log.Date
  name: Date
  nameWithType: Log.Date
  fullName: EasySave.Model.Log.Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: EasySave.Model.Log.TaskName*
  commentId: Overload:EasySave.Model.Log.TaskName
  name: TaskName
  nameWithType: Log.TaskName
  fullName: EasySave.Model.Log.TaskName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EasySave.Model.Log.Source*
  commentId: Overload:EasySave.Model.Log.Source
  name: Source
  nameWithType: Log.Source
  fullName: EasySave.Model.Log.Source
- uid: EasySave.Model.Log.Target*
  commentId: Overload:EasySave.Model.Log.Target
  name: Target
  nameWithType: Log.Target
  fullName: EasySave.Model.Log.Target
- uid: EasySave.Model.Log.FilesSize*
  commentId: Overload:EasySave.Model.Log.FilesSize
  name: FilesSize
  nameWithType: Log.FilesSize
  fullName: EasySave.Model.Log.FilesSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EasySave.Model.Log.TransfertTime*
  commentId: Overload:EasySave.Model.Log.TransfertTime
  name: TransfertTime
  nameWithType: Log.TransfertTime
  fullName: EasySave.Model.Log.TransfertTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: EasySave.Model.Log.FeedLog*
  commentId: Overload:EasySave.Model.Log.FeedLog
  name: FeedLog
  nameWithType: Log.FeedLog
  fullName: EasySave.Model.Log.FeedLog
